from aiogram import Bot, Dispatcher, executor, types,filters
from main import bot
from keyboards import replyMarkups as rpk
from keyboards import inlineMarkups as inl
from DataBase import db as DB
from Parser import RSS_Parser as RP


#–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø, –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥ –Ω–µ—ë
async def addGroup(message:types.Message):
    x = 1 # –°—á–µ—Ç—á–∏–∫, —á—Ç–æ–±—ã –≤—ã–≤–æ–¥–∏—Ç—å –∫–Ω–æ–ø–∫–∏, –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    kb = types.InlineKeyboardMarkup(row_width=3) # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    group_list = DB.listOfGroups() # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø
    msg = " üìÉ –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≥—Ä—É–ø–ø:\n\n"
    for i in group_list: # –í—ã–≤–æ–¥–∏–º –∏–º—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã –≤ —Ñ–æ—Ä–º—É 1: –ò–º—è –≥—Ä—É–ø–ø—ã –∏ —Å—Ä–∞–∑—É —Å–æ–∑–¥–∞–µ–º –ø–æ–¥ –Ω–µ—ë –∫–Ω–æ–ø–∫—É
        msg += str(x) + ": " + i[1] + "\n"
        kb.insert(types.InlineKeyboardButton(text=x, callback_data=x))
        x += 1
        if x == 7:
            break
    kb.insert(types.InlineKeyboardButton(text="–•–æ—á—É —É–∑–∫–æ—Å–ø–µ—Ü–∏–∞–ª–∏–∑—Ä–æ–≤–∞–Ω–Ω—ã–π —Ö–∞–±", callback_data="smallHub"))
    msg += "\n–ù–∏–∂–µ –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∫—É–¥–∞ —Ö–æ—á–µ—à—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è"
    await bot.send_message(message.from_user.id, msg, reply_markup=kb)


# –û–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –±–∞–∑–µ —á—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞
async def addToGroup(message: types.Message, text:str):
    #text = text.replace(' ', '')
    text = text.rstrip()
    idSub = DB.getIdHubByName(text)
    if DB.isUserSubOnGroup(message.from_user.id,idSub) == True:
        DB.subUserToGroup(message.from_user.id,idSub)
        await bot.send_message(message.from_user.id,"–ü–æ–¥–ø–∏—Å–∞–ª –≤–∞—Å –Ω–∞ —Ö–∞–±: " + text +
                               "\n–•–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç–∞—Ç—å—é —Å —ç—Ç–æ–≥–æ —Ö–∞–±–∞?", reply_markup=inl.btnYesNO)
    else:
        await bot.send_message(message.from_user.id,"–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ö–∞–± '" + text + '"')

async def deactivateUser(message: types.Message):
    DB.deactivateUser(message.from_user.id)
    await bot.send_message(message.from_user.id,"–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª –≤–∞—à—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å üòü. \n\n–¢–µ–ø–µ—Ä—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å." +
                           " –ù–æ –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–ø–∏—à–∏ —Å–Ω–æ–≤–∞ /start. –ò –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π –≤—Å–µ —Ç–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —Å–æ—Ö—Ä–∞–Ω–æ—Å—Ç–∏!")

#–í—ã–≤–æ–¥–∏—Ç –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def myGroups(message:types.Message):
    x = 1  # –°—á–µ—Ç—á–∏–∫, —á—Ç–æ–±—ã —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    group_list = DB.getUserGroups(message.from_user.id) # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø
    msg = "üìñ –í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏: üìñ\n\n"
    if len(group_list) != 0:
        for i in group_list:
            msg += str(x) + ": " + i[0][0] + "\n"
            x += 1
        await bot.send_message(message.from_user.id, msg)
    else:
        await bot.send_message(message.from_user.id, "–¢—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–µ –Ω–∞ –æ–¥–∏–Ω —Ö–∞–±.\n–ß—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫—É '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –≥—Ä—É–ø–ø—É ‚ûï'")

async def deleteGroup(message:types.Message):
    group_list = DB.getUserGroups(message.from_user.id)
    kb = types.InlineKeyboardMarkup(row_width=4)
    x = 1
    if len(group_list) != 0:
        msg = "‚ùì –û—Ç —á–µ–≥–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è? ‚ùì\n\n"
        for i in group_list:
            msg += str(x) + ": " + i[0][0] + "\n"
            kb.insert(types.InlineKeyboardButton(text=x, callback_data=x))
            x += 1

        msg += "\n –ù–∏–∂–µ –≤—ã–±–æ—Ä"
        await bot.send_message(message.from_user.id, msg, reply_markup=kb)
    else:
        await bot.send_message(message.from_user.id, "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–µ –Ω–∞ –æ–¥–∏–Ω —Ö–∞–±")

async def deleteFromGroup(message:types.Message, text:str):
    text = text.rstrip()
    id_hub = DB.getIdHubByName(text)
    DB.unsubUserFromGroup(message.from_user.id,id_hub)
    await bot.send_message(message.from_user.id, "–û—Ç–ø–∏—Å–∞–ª –≤–∞—Å –æ—Ç —Ö–∞–±–∞ '" + text + '"')

#---------------------------- Schedule Logic ----------------------------------------
async def Schedule():
    activityHub = DB.activityHubs()
    if len(activityHub) != 0:
        for i in activityHub:
            rss_link = DB.getRSSLinkOfHub(i[0]) # –ü–æ–ª—É—á–∞–µ–º RSS —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É
            last_art = DB.getLastArticle(i[0]) # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç–∞—Ç—å–∏
            currentLink = RP.getLastArticleAll(rss_link) # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç–∞—Ç—å—é –Ω–∞ –ø–æ–¥—Å–∞–π—Ç–µ

            if currentLink == last_art: # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–Ω–¥—é—é —Å—Ç–∞—Ç—å—é –∏ —Ç–µ–∫—É—â—É—é
                print("–ù–æ–≤—ã—Ö –Ω–µ—Ç")
                continue
            else:
                print("–ù–æ–≤—ã–µ –µ—Å—Ç—å")
                users = DB.userToSend(i[0]) # –£–∑–Ω–∞–µ–º –∫–∞–∫–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é
                name = DB.getNameHubById(i[0]) # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –≥—Ä—É–ø–ø—ã —á—Ç–æ–±—ã —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                for m in users:
                    # –í —Ç–µ—Å—Ç–æ–≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
                    await bot.send_message(m[0], "–ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è —Å —Ö–∞–±–∞: " + name[0][0])
                    await bot.send_message(m[0], currentLink)
                DB.updateCurrentLink(i[0], currentLink) # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—å—é
    else:
        pass

#----------------------------------- Get Last Aricle ------------------------------
async def getLast(message:types.message, text:str):
    idSub = DB.getIdHubByName(text)
    rss_link = DB.getRSSLinkOfHub(idSub)
    last_art = DB.getLastArticle(idSub)
    currentLink = RP.getLastArticleAll(rss_link)
    if currentLink == last_art:
        await bot.send_message(message.from_user.id,currentLink)
    else:
        DB.updateCurrentLink(idSub, currentLink)
        await bot.send_message(message.from_user.id, currentLink)




